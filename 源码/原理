声明：本程序仅用于学习研究，严禁用于非法用途
实现思路：
我在网络上看到很多ewt刷进度的文章，这些文章全都是采用强制倍速播放或调定时器的方法。
这些方法效率低下，且大部分已被平台封杀。
于是我想到从根源解决问题：平台上报视频进度肯定要向服务器发送请求，不如直接伪造请求，不就能达到刷进度的目的了吗？
说干就干：
先找到发送请求的内容
发现它的数据是由两部分组成：CommonPackage、EventPackage、signature
仔细分析：
CommonPackage中mstid是用户的token，userid可以通过cookie获取到，其它参数都不用修改
EventPackage下的参数基本都是动态生成的，需要查看源码，看看是如何生成的
signature是用于验证数据的真实性用的
不要忘了请求头里的内容，其中有一个x-bfe-session-id十分值得注意
查看源码：
先从signature入手，在源码中查护照signature
发现function.ts中有重要代码
发现signature是由HMAC-SHA1算法生成的
我们首先找用于生成的key，发现在网络请求中一个叫hmacSecret的请求
打断点断下，核实就是加密用的key，还意外发现响应中还有一个sessionId和之前请求头里发现的x-bfe-session-id一致
至于加密的内容就是ret里的内容按一定顺序排列并在中间加上&和=生成的，这里不再详细叙述（记得ret里的内容需与请求中EventPackage里的内容保持一致，并且duration=timestamp-begin_time）
至此请求的内容就搞定了
接下来，用python尝试发送请求
发现每次无论duration设置多大，视频都只能刷一部分。
于是我做了个循环，这样就能刷了（注意一定每次循环完要延迟，不要太快，否则容易被系统发现）
再写一些代码实现登录、获取courseid、lessionid等等，一个刷课程序就大功告成
END
